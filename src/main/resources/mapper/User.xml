<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，
这样就能够保证namespace的值是唯一的例如namespace="me.gacl.mapping.userMapper"
就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="mapper.User">

    <!-- 在select标签中编写查询的SQL语句，设置select标签的id属性为queryById，id属性值必须是唯一的，
    不能够重复使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <!--<select id="queryById" parameterType="int" resultType="User">-->
        <!--SELECT * FROM student WHERE id=#{id}-->
    <!--</select>-->

    <!--&lt;!&ndash; 查询全部用户&ndash;&gt;-->
    <!--<select id="getAllUsers" resultType="User">-->
        <!--select * from student-->
    <!--</select>-->

    <!--&lt;!&ndash; 创建用户(Create) &ndash;&gt;-->
    <!--<insert id="insertUser" parameterType="User">-->
        <!--INSERT INTO student(id,name,age,sex)VALUES (#{id},#{name},#{age},#{sex})-->
    <!--</insert>-->

    <!--&lt;!&ndash; 修改用户(Update) &ndash;&gt;-->
    <!--<update id="updateUser" parameterType="User">-->
        <!--UPDATE student SET name=#{name},age=#{age},sex=#{sex} WHERE id=#{id}-->
    <!--</update>-->

    <!--&lt;!&ndash; 删除用户(Remove) &ndash;&gt;-->
    <!--<delete id="deleteUser" parameterType="int">-->
        <!--DELETE from student where id=#{id}-->
    <!--</delete>-->

    <insert id="insertRSSI" parameterType="Signal">
    INSERT INTO rssi(CrawlingTime,RP,RSSI)VALUES (#{CrawlingTime},#{RP},#{RSSI})
    </insert>
</mapper>